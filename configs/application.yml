# Application Configuration
app:
  name: GO-API
  server:
    port: ${SERVER_PORT:8080}
    context-path: /go-api
    timeout: 3s
    body-limit: 10MB
  db:
    host: ${DB_HOST:localhost}
    port: ${DB_PORT:5432}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    database: ${DB_DATABASE:postgres}
    schema: ${DB_SCHEMA:go}
  cloud:
    aws-region: us-east-1
    aws-endpoint: ${AWS_ENDPOINT:http://localhost:4566}
    aws-access-key-id: ${AWS_ACCESS_KEY_ID:test}
    aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY:test}
    aws-use-ssl: ${AWS_USE_SSL:false}
  cache:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redis_password}
      db: ${REDIS_DB:0}
      pool:
        min-idle-conns: ${REDIS_MIN_IDLE_CONNS:5}
        max-idle-conns: ${REDIS_MAX_IDLE_CONNS:10}
      ttl:
        default: 1h
        short-url: 24h
        weather: 30m

# Short URL Service Configuration
short-url:
  clear:
    cron: "0 19 * * *"

# Weather Service Configuration
weather:
  base-url: https://brasilapi.com.br/api
  follow-redirect: true
  dismiss-404: false
  max-idle-conns: 200
  max-idle-conns-per-host: 50
  idle-conn-timeout: 60s
  connection-timeout: 60s
  read-timeout: 60s
  default-content-type: application/json
  queue-name: weather-queue
  batch-size: 10
  worker:
    max-number-of-messages: 10
    wait-time-seconds: 20
    pool-size: 1
    log-level: info
